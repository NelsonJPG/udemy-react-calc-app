{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nelson/projects/udemy-calc-app/src/components/Numbers.jsx\";\nimport PropTypes from 'prop-types';\nimport Button from \"./Button\";\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\nconst renderButtons = onClickNumber => numbers.map(number => /*#__PURE__*/_jsxDEV(Button, {\n  text: number.toString(),\n  clickHandler: onClickNumber\n}, number.toString(), false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 64\n}, this));\n\nconst Numbers = ({\n  onClickNumber\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"numbers\",\n    children: renderButtons(onClickNumber)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Numbers;\nNumbers.propTypes = {\n  onClickNumber: PropTypes.func.isRequired\n};\nexport default Numbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"sources":["/home/nelson/projects/udemy-calc-app/src/components/Numbers.jsx"],"names":["PropTypes","Button","numbers","renderButtons","onClickNumber","map","number","toString","Numbers","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAhB;;AAEA,MAAMC,aAAa,GAAGC,aAAa,IAAIF,OAAO,CAACG,GAAR,CAAaC,MAAM,iBAAK,QAAC,MAAD;AAAgC,EAAA,IAAI,EAAEA,MAAM,CAACC,QAAP,EAAtC;AAAyD,EAAA,YAAY,EAAEH;AAAvE,GAAaE,MAAM,CAACC,QAAP,EAAb;AAAA;AAAA;AAAA;AAAA,QAAxB,CAAvC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAqB;AACjC,sBACI;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,cACMD,aAAa,CAACC,aAAD;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMI,O;AAQNA,OAAO,CAACC,SAAR,GAAoB;AAChBL,EAAAA,aAAa,EAAEJ,SAAS,CAACU,IAAV,CAAeC;AADd,CAApB;AAIA,eAAeH,OAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport Button from \"./Button\"\n\nconst numbers = [1,2,3,4,5,6,7,8,9,0];\n\nconst renderButtons = onClickNumber => numbers.map( number =>  <Button key={number.toString()} text={number.toString()} clickHandler={onClickNumber} />)\n\nconst Numbers = ({onClickNumber}) => {\n    return (\n        <section className=\"numbers\">\n            { renderButtons(onClickNumber) }\n        </section>\n    )\n}\n\nNumbers.propTypes = {\n    onClickNumber: PropTypes.func.isRequired\n}\n\nexport default Numbers;"]},"metadata":{},"sourceType":"module"}